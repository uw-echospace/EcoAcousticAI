name: Manage Jetstream2 Instance

on:
  schedule:
    - cron: '0 16 * * 1'  # 8 AM PT (16:00 UTC) every Monday - Unshelve instance
    - cron: '0 2 * * 2'   # 6 PM PT (02:00 UTC Tuesday) - Shelve instance
  workflow_dispatch:  # Allows manual trigger

jobs:
  unshelve-and-run-model:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 16 * * 1' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Install OpenStack CLI
        run: sudo apt update && sudo apt install -y python3-openstackclient

      - name: Authenticate with OpenStack
        run: |
          mkdir -p ~/.config/openstack
          echo "${{ secrets.CLOUDS_YAML }}" > ~/.config/openstack/clouds.yaml
          chmod 600 ~/.config/openstack/clouds.yaml
          openstack --os-cloud=BIO230143_IU server list  # Debug check

      - name: Unshelve the Instance
        run: |
          INSTANCE_ID="2bf63535-1f6b-4c8b-885e-2e5f2786fa31"
          STATUS=$(openstack --os-cloud=BIO230143_IU server show $INSTANCE_ID -f value -c status)
          
          if [[ "$STATUS" == "SHELVED_OFFLOADED" ]]; then
            echo "Instance is shelved. Unshelving now..."
            openstack --os-cloud=BIO230143_IU server unshelve $INSTANCE_ID
          fi

          echo "Waiting for the instance to become ACTIVE..."
          for i in {1..10}; do  # Wait up to 10 minutes
            STATUS=$(openstack --os-cloud=BIO230143_IU server show $INSTANCE_ID -f value -c status)
            if [[ "$STATUS" == "ACTIVE" ]]; then
              echo "Instance is now ACTIVE!"
              exit 0
            fi
            echo "Instance is still $STATUS. Waiting 60 seconds..."
            sleep 60
          done

          echo "Instance failed to become ACTIVE within 10 minutes."
          exit 1  # Force GitHub Actions to fail if unshelving takes too long


      - name: Start Instance
        run: |
          INSTANCE_ID="2bf63535-1f6b-4c8b-885e-2e5f2786fa31"
          STATUS=$(openstack --os-cloud=BIO230143_IU server show $INSTANCE_ID -f value -c status)
          if [[ "$STATUS" == "ACTIVE" ]]; then
            echo "Instance is already active."
          else
            echo "Starting instance..."
            openstack --os-cloud=BIO230143_IU server start $INSTANCE_ID
          fi
    
      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.JETSTREAM2_SSH_KEY }}" > ~/.ssh/jetstream2_key
          chmod 600 ~/.ssh/jetstream2_key
          ssh-keyscan -H "149.165.152.236" >> ~/.ssh/known_hosts

      - name: Mount Manila Storage on Instance
        run: |
          echo "Mounting Manila storage..."
          SSH_KEY="~/.ssh/jetstream2_key"
          STORAGE_PATH="149.165.158.38:6789,149.165.158.22:6789,149.165.158.54:6789,149.165.158.70:6789,149.165.158.86:6789:/volumes/_nogroup/b726fc5b-0674-4ba8-a5c4-17a8684d0415/daf825a1-77fa-4c9e-8f5a-c56ed8f7d55c"

          ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@149.165.152.236 << EOF
            echo "Creating mount directory..."
            sudo mkdir -p /mnt/manila

            echo "Mounting Manila storage..."
            sudo mount -t nfs $STORAGE_PATH /mnt/manila

            echo "Fixing permissions on /mnt/manila/"
            sudo chown -R ubuntu:ubuntu /mnt/manila/
            sudo chmod -R 777 /mnt/manila/

            echo "Manila storage successfully mounted and permissions fixed."
          EOF


      - name: Run Model and Save Results to Manila
        run: |
          echo "Running model and saving results..."
          SSH_KEY="~/.ssh/jetstream2_key"

          ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@149.165.152.236 << EOF
            # ðŸ”¹ TEST BLOCK: Create a test file in Manila storage
            echo "Hello from Jetstream2! This file confirms Manila storage is working." > /mnt/manila/test_manila.txt
            echo "Test file created at /mnt/manila/test_manila.txt"

            # ðŸ”¹ Verify that the test file exists
            ls -lh /mnt/manila/test_manila.txt
          EOF

      - name: Verify File Exists
        run: |
          ls -lh

      - name: Copy Streamlit App to Instance
        run: |
          echo "Copying app.py to Jetstream2..."
          SSH_KEY="~/.ssh/jetstream2_key"
          INSTANCE_IP="149.165.152.236"

          scp -o StrictHostKeyChecking=no -i $SSH_KEY app.py ubuntu@$INSTANCE_IP:/home/ubuntu/app.py

      - name: Start Streamlit App
        run: |
          echo "Starting Streamlit..."
          SSH_KEY="~/.ssh/jetstream2_key"
          INSTANCE_IP="149.165.152.236"

          ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@$INSTANCE_IP << EOF
          echo "Installing Streamlit if not installed..."
          pip3 install --upgrade streamlit pandas

          echo "Launching Streamlit..."
          nohup streamlit run /home/ubuntu/app.py --server.port 8501 --server.enableCORS false --server.enableXsrfProtection false > streamlit.log 2>&1 &
          echo "Streamlit is running in the background."
          EOF


          
         


  shelve-instance:
    if: false
    runs-on: ubuntu-latest
    needs: unshelve-and-run-model  # <-- This makes sure it runs ONLY after the first job completes
    steps:
      - name: Install OpenStack CLI
        run: sudo apt update && sudo apt install -y python3-openstackclient

      - name: Authenticate with OpenStack
        run: |
          mkdir -p ~/.config/openstack
          echo "${{ secrets.CLOUDS_YAML }}" > ~/.config/openstack/clouds.yaml
          chmod 600 ~/.config/openstack/clouds.yaml
          openstack --os-cloud=BIO230143_IU server list  # Debug check

      - name: Shelve Instance
        run: |
          INSTANCE_ID="2bf63535-1f6b-4c8b-885e-2e5f2786fa31"
          STATUS=$(openstack --os-cloud=BIO230143_IU server show $INSTANCE_ID -f value -c status)

          echo "Checking if instance is ready to be shelved..."
          while [[ "$STATUS" == "BUILD" || "$STATUS" == "REBOOT" || "$STATUS" == "UNSHELVING" ]]; do
            echo "Instance is still transitioning. Waiting 60 seconds..."
            sleep 60
            STATUS=$(openstack --os-cloud=BIO230143_IU server show $INSTANCE_ID -f value -c status)
          done

          if [[ "$STATUS" == "ACTIVE" ]]; then
            echo "Shelving instance now..."
            openstack --os-cloud=BIO230143_IU server shelve $INSTANCE_ID
          else
            echo "Instance is not in a valid state for shelving. Current status: $STATUS"
          fi
